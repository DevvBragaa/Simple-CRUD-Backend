name: Java CI with SonarQube

on:
  push:
    branches:
      - "**"
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  preflight:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Validate commit message
        run: |
          REGEX="^(Merge|Revert|(build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|Message)(\\(.+\\))?!?: .)"
          COMMIT_MESSAGE=$(git log --format=%B -n 1 $GITHUB_SHA)
          echo "Commit Message: ${COMMIT_MESSAGE}"
          if ! [[ $COMMIT_MESSAGE =~ $REGEX ]]; then
            echo >&2 "ERROR: Commit aborted for not following the Conventional Commit standard."
            exit 1
          else
            echo >&2 "Valid commit message."
          fi

  build:
    runs-on: ubuntu-latest
    needs: preflight
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          architecture: x64
          cache: maven

      - name: Build with Maven
        working-directory: ./crud
        run: |
          mvn -B package -f pom.xml
          if [ $? -ne 0 ]; then
            echo "Build failed. Please check your changes and try again."
            exit 1
          fi

  sonarqube:
   name: SonarQube Scan
   runs-on: ubuntu-latest
   needs: build
   steps:
     - name: Checkout code
       uses: actions/checkout@v4
       with:
         fetch-depth: 0

     - name: SonarQube Scan
       uses: SonarSource/sonarqube-scan-action@v5
       env:
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
       with:
         projectBaseDir: ./crud

      

